<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.apache.org//dtd mapper 3.0//en"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

        <!--Unit02完成-->

<!--每个实例和实体的访问接口对应一个映射（mapper）文件-->
<!--namespace的值是实体访问接口的类名，不能错-->
<mapper namespace="version01.dao.AccountDao">

    <!--查询出某一页的账务账号数据-->
    <select id="findByPage" parameterType="version01.vo.AccountPage" resultType="version01.entity.Account">
         SELECT child.* FROM
        (
          select * from account
          <where>
              <if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
                  and idcard_no=#{idcard_no,jdbcType=VARCHAR}
              </if>
              <if test="real_name!=null &amp;&amp; real_name.length()>0">
                  and real_name=#{real_name,jdbcType=VARCHAR}
              </if>
              <if test="login_name!=null &amp;&amp; login_name.length()>0">
                  and login_name=#{login_name,jdbcType=VARCHAR}
              </if>
              <if test="status!=null &amp;&amp; status.length()>0 &amp;&amp; !status.equals('-1')">
                  and status=#{status,jdbcType=VARCHAR}
              </if>
          </where>
         )child
          WHERE child.account_id >0 ORDER BY account_id asc LIMIT #{begin},#{pageSize}
    </select>

    <!--查询总行数-->
    <select id="findRows" parameterType="version01.vo.AccountPage" resultType="java.lang.Integer">
        select count(*) from account
        <where>
            <if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
                and idcard_no=#{idcard_no,jdbcType=VARCHAR}
            </if>
            <if test="real_name!=null &amp;&amp; real_name.length()>0">
                and real_name=#{real_name,jdbcType=VARCHAR}
            </if>
            <if test="login_name!=null &amp;&amp; login_name.length()>0">
                and login_name=#{login_name,jdbcType=VARCHAR}
            </if>
            <if test="status!=null &amp;&amp; status.length()>0 &amp;&amp; !status.equals('-1')">
                and status=#{status,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!--暂停账务账号-->
    <update id="pause" parameterType="java.lang.Integer" >
        update account set status='1',pause_date=now() where account_id=#{id}
    </update>

    <!--开通账务账号-->
    <update id="start" parameterType="java.lang.Integer">
        update account set status='0',pause_date=null where account_id=#{id}
    </update>

    <!--删除账务账号-->
    <update id="delete" parameterType="java.lang.Integer">
        update account set status='2',close_date=now() where account_id=#{id}
    </update>


    <!--以下是修改需要的功能-->

    <!--根据ID查询账务账号-->
    <select id="findById" parameterType="java.lang.Integer" resultType="version01.entity.Account">
        select * from account where account_id=#{id}
    </select>

    <!--修改一条账务账号-->
    <!--为什么这里不用set标签？因为这里和查询时不同，查询是“条件”，填空就不查；这里是“修改”，填空就是要改为空！-->
    <update id="update" parameterType="version01.entity.Account">
        update account set
            real_name=#{real_name,jdbcType=VARCHAR},
            telephone=#{telephone,jdbcType=VARCHAR},
            email=#{email,jdbcType=VARCHAR},
            occupation=#{occupation,jdbcType=VARCHAR},
            gender=#{gender,jdbcType=VARCHAR},
            mailaddress=#{mailaddress,jdbcType=VARCHAR},
            zipcode=#{zipcode,jdbcType=VARCHAR},
            qq=#{qq,jdbcType=VARCHAR}
        where account_id=#{account_id}
    </update>
</mapper>